defaults:
  run:
    working-directory: aspnet

jobs:
  build:
    name: building
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - run: dotnet restore
      - run: dotnet build
  test:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - run: dotnet test

  analyze:
    needs: [build, test]
    runs-on: ubuntu-20.04
    env:
      SONARCLOUD_TOKEN: ${{ secrets.SONARCLOUD_TOKEN }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v2
      - run: dotnet tool install --global dotnet-sonarscanner
      - run: |
          dotnet sonarscanner begin /k:'Revature-Team-Videos_RevatureTeamVideos' /o:'revature-team-videos' /d:sonar.host.url='https://sonarcloud.io/' /d:sonar.login=$SONARCLOUD_TOKEN
          dotnet build
          dotnet test -p:CollectCoverage=true -p:CoverletOutputFormat=opencover --logger=trx
          dotnet sonarscanner end /d:sonar.login=$SONARCLOUD_TOKEN

  pack:
    needs:
      - build
      - test
      - analyze
    runs-on: ubuntu-20.04
    env:
      DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
      DOCKER_USER: ${{ secrets.DOCKER_USER }}
    steps:
      - uses: actions/checkout@v2
      - run: echo $DOCKER_TOKEN | docker login -u $DOCKER_USER --password-stdin
      - run: docker image build -f ../Dockerfile -t videoshare ..
      - run: docker image tag videoshare videoswithfriends/revature-videoswithfriends:v1
      - run: docker push videoswithfriends/revature-videoswithfriends:v1
      - run: docker logout

  deploy:
    needs: pack
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - uses: azure/webapps-deploy@v2
        with:
          app-name: videoswithfriends-client
          images: videoswithfriends/revature-videoswithfriends:v1
on:
  push:
    branches:
      - main